services:
  # =======================
  # API GATEWAY (NGINX)
  # =======================
  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - products_media:/app/media
    depends_on:
      - users_service
      - products_service
      - orders_service
      - recommendations_service
    networks:
      - ecommerce_net

  # =======================
  # USERS SERVICE
  # =======================
  users_service:
    build:
      context: ./users_service
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_PASSWORD: ${PASSWORD}
      DB_PORT: ${PORT}
      DB_HOST: ${USERS_SERVICE_HOST}
      DB_NAME: ${USERS_SERVICE_DB}
      DB_USER: ${USERS_SERVICE_USER}
    volumes:
      - ./users_service:/app
    ports:
      - "8002:8000"
    depends_on:
      - users_db
    networks:
      - ecommerce_net

  users_db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${USERS_SERVICE_DB}
      POSTGRES_USER: ${USERS_SERVICE_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - users_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net

  # =======================
  # CARTS SERVICE
  # =======================
  carts_service:
    build:
      context: ./carts_service
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_PASSWORD: ${PASSWORD}
      DB_PORT: ${PORT}
      DB_HOST: ${CARTS_SERVICE_HOST}
      DB_NAME: ${CARTS_SERVICE_DB}
      DB_USER: ${CARTS_SERVICE_USER}
    volumes:
      - ./carts_service:/app
    ports:
      - "8005:8000"
    depends_on:
      - carts_db
    networks:
      - ecommerce_net

  carts_db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${CARTS_SERVICE_DB}
      POSTGRES_USER: ${CARTS_SERVICE_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - carts_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net

  # =======================
  # PRODUCTS SERVICE
  # =======================
  products_service:
    build:
      context: ./products_service
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_PASSWORD: ${PASSWORD}
      DB_PORT: ${PORT}
      DB_HOST: ${PRODUCTS_SERVICE_HOST}
      DB_NAME: ${PRODUCTS_SERVICE_DB}
      DB_USER: ${PRODUCTS_SERVICE_USER}
    volumes:
      - ./products_service:/app
      - products_media:/app/media
    ports:
      - "8003:8000"
    depends_on:
      - products_db
    networks:
      - ecommerce_net

  products_db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${PRODUCTS_SERVICE_DB}
      POSTGRES_USER: ${PRODUCTS_SERVICE_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - products_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net

  # =======================
  # ORDERS SERVICE
  # =======================
  orders_service:
    build:
      context: ./orders_service
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_PASSWORD: ${PASSWORD}
      DB_PORT: ${PORT}
      DB_HOST: ${ORDERS_SERVICE_HOST}
      DB_NAME: ${ORDERS_SERVICE_DB}
      DB_USER: ${ORDERS_SERVICE_USER}
    volumes:
      - ./orders_service:/app
    ports:
      - "8004:8000"
    depends_on:
      - orders_db
    networks:
      - ecommerce_net

  orders_db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${ORDERS_SERVICE_DB}
      POSTGRES_USER: ${ORDERS_SERVICE_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - orders_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net

  # =======================
  # RECOMMENDATIONS SERVICE
  # =======================
  recommendations_service:
    build:
      context: ./recommendations_service
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DB_PASSWORD: ${PASSWORD}
      DB_PORT: ${PORT}
      DB_HOST: ${RECOMMENDATIONS_SERVICE_HOST}
      DB_NAME: ${RECOMMENDATIONS_SERVICE_DB}
      DB_USER: ${RECOMMENDATIONS_SERVICE_USER}
    volumes:
      - ./recommendations_service:/app
    ports:
      - "8006:8000"
    depends_on:
      - recommendations_db
    networks:
      - ecommerce_net

  recommendations_db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${RECOMMENDATIONS_SERVICE_DB}
      POSTGRES_USER: ${RECOMMENDATIONS_SERVICE_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    volumes:
      - recommendations_data:/var/lib/postgresql/data
    networks:
      - ecommerce_net

# =======================
# NETWORKS E VOLUMES
# =======================
networks:
  ecommerce_net:
    driver: bridge

volumes:
  users_data:
  products_data:
  orders_data:
  recommendations_data:
  carts_data:
  products_media:
